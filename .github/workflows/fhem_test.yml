name: Fhem UnitTest
on:
  push:
    branches:
    paths:
      - 'FHEM/**'
      - 'UnitTest/**'
      - 't/**'
      - '.github/workflows/fhem_test.yml'
  
  schedule:
    - cron: '43 17 * * 1'

jobs:
  update_controls:
    env:
      CONTROLS_FILENAME: controls_${{ github.event.repository.name }}.txt
    runs-on: ubuntu-latest
    steps:
    - name: Extract branch name
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/*/})"
      id: extract_branch
    - name: Checkout Repostory
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: update controls files
      uses: fhem/fhem-controls-actions@v2
      with:
        filename: ${{env.CONTROLS_FILENAME}} 
    - name: update CHANGED
      run: |
        LOG=$(date +"%Y-%m-%d") 
        LOG+=" - $(git log -1 --pretty=%B)"
        echo "$LOG" | cat - CHANGED  2>/dev/null >> temp || true  && mv temp CHANGED
    - name: git commit back
      run: |
        git config --global user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add  CHANGED ${{env.CONTROLS_FILENAME}}  || true
        git log -1 --name-only --pretty=format: | grep -Eo '[0-9]{2}_.*.pm$' && git commit CHANGED ${{env.CONTROLS_FILENAME}}  -m "Automaitc updated controls and CHANGED" || true
    - name: git push
      uses: ad-m/github-push-action@v0.6.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ steps.extract_branch.outputs.branch }}
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    strategy:
      matrix:
        os: ['ubuntu-latest']
        perl: [ '5.22', '5.28', '5.30', '5.32' ]

    name: Perl ${{ matrix.perl }} on ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: shogo82148/actions-setup-perl@v1.23.0
      with:
        perl-version: ${{ matrix.perl }}
        install-modules-with: cpanm
        install-modules-args: --notest
  
    - name: Install FHEM via debian nightly 
      uses: fhem/setup-fhem@v1.0.1

    - name: change ownership of /opt/fhem
      run: |
        sudo chown -R --reference=cpanfile /opt/fhem

#    - name: run prove on perl modules (testscripts)
#      run: prove --exec 'perl -MDevel::Cover=-silent,1 -I FHEM ' -I FHEM -r -vv t/FHEM/<packagename>
#    - uses: codecov/codecov-action@v1
#      with:
#        token: ${{ secrets.CODECOV_TOKEN }}
#        file: ./cover_db/clover.xml
#        flags: unittests,perl,modules
#        name: perl modules (testscripts) ${{ matrix.perl }}
    - name: run prove fhem testsuite ${{ matrix.perl }} on modules
      run: |
        cp -r FHEM/* ${FHEM_DIR}/FHEM/
        cd ${FHEM_DIR}
        prove --exec 'perl -MDevel::Cover=-silent,1 fhem.pl -t' -I FHEM -r -vv ${GITHUB_WORKSPACE}/t/FHEM/[0-9][0-9]_*/
        sleep 3
        cp -R /opt/fhem/cover_db ${GITHUB_WORKSPACE}/
        ls -l ${GITHUB_WORKSPACE}
      env:
        FHEM_DIR: /opt/fhem
    - name: Create clover report  
      run: cover -report clover
#    - uses: codecov/codecov-action@v1
#      with:
#        token: ${{ secrets.CODECOV_TOKEN }}
#        file: ./cover_db/clover.xml
#        flags: unittests,fhem,modules
#        name: fhem (testscripts) ${{ matrix.perl }}
  
